#!/bin/bash

# build variables
wget_binaries="src/wget"
wget_configure_options="--with-ssl=openssl --without-included-regex --without-zlib"
wget_aarch64="$(uname -m | grep -q 'aarch64' && echo gcc)"
wget_arm="$(uname -m | grep -q 'arm[567]' && echo gcc || echo no)"

# package variables
wget_Depends="libpcre, zlib, libopenssl, librt"
wget_License="GPL-3.0+"
wget_Section="net"
wget_Maintainer="Peter Wagner"
wget_Description="Wget is a network utility to retrieve files from the Web using http
 and ftp, the two most widely used Internet protocols.
 This package is built with SSL support."

wget_postrm() {
  cat <<POR
#!/bin/sh
[ -e /rom/usr/bin/wget ] && cp -a /rom/usr/bin/wget /usr/bin/wget
exit 0
POR
}

wget_popd() {
  unset CPPFLAGS LDFLAGS LIBS AR AS LD NM RANLIB
  popd
}

wget_pushd() {
  local get=false
  local dir=$(find . -maxdepth 1 -type d -name 'wget*')
  local exe

  if [ -z "$dir" ]; then
    get=true
  else
    local remote="$(curl -svX HEAD https://ftp.gnu.org/gnu/wget/wget-latest.tar.gz 2>&1 | grep '^< Last-Modified:' | cut -d: -f2-)"
    local remote_seconds=$(date -d "$remote" +%s)
    if [ $remote_seconds -gt $(date -r $dir +%s) ]; then
      rm -rf wget*
      get=true
    fi
  fi
  if $get; then
    curl -L https://ftp.gnu.org/gnu/wget/wget-latest.tar.gz | tar -xzf -
    dir=$(find . -maxdepth 1 -type d -name 'wget*')
  fi
  if [ -z "$dir" ]; then
    exit 2
  fi

  export CPPFLAGS="-I/usr/lib -I/usr/include/openssl"
  export LIBS="-static -lc -ldl"

  if [ -n "$1" ]; then
    for exe in ar as ld nm ranlib; do
      if [ -x $1/$CC-$exe ]; then
        eval export $(echo $exe | tr '[:lower:]' '[:upper:]')="$CC-$exe"
      elif [ -x $1/$(echo $CC | sed -e 's/-gcc//')-$exe ]; then
        eval export $(echo $exe | tr '[:lower:]' '[:upper:]')="$(echo $CC | sed -e 's/-gcc//')-$exe"
      elif [ -x $1/$exe ]; then
        eval export $(echo $exe | tr '[:lower:]' '[:upper:]')="$exe"
      fi
    done
  fi

  pushd $dir
}

wget_version() {
  find . -maxdepth 1 -name .version -exec cat {} \;
}